# Generated by Django 4.0.5 on 2023-01-27 08:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('grade', '0006_alter_tasks_to_evaluate_options_terms_of_delivery'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_delivery', models.URLField(blank=True, null=True)),
                ('correction_date', models.DateField(auto_now_add=True)),
                ('criteria_01_score', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('criteria_02_score', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('criteria_03_score', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('criteria_04_score', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_score', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rating', models.CharField(choices=[('>= 80', 'Óptimo'), ('51 <= 79', 'Correcto'), ('<= 50', 'Bajo')], default='Óptimo', max_length=50, verbose_name='Calificación final de la entrega')),
                ('comment', models.TextField(default='Hola ###, \n El trabajo está perfecto. \n Sólo como un detalle, te recomiendo que te acostumbres a dejar comentarios en el código explicando qué hace cada porción de código. \n Felicitaciones!')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grade.student')),
                ('terms_of_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grade.terms_of_delivery')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
                'ordering': ['-correction_date'],
            },
        ),
    ]
